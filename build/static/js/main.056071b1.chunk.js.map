{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","TodoForm/index.js","CreateTodoButton/index.js","Modal/index.js","TodoError/index.js","TodoLoading/index.js","TodoEmpty/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","addTodo","push","unCompleteTodo","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","console","log","target","TodoList","TodoItem","onClick","unComplete","onComplete","onDelete","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","disabled","CreateTodoButton","Modal","ReactDOM","createPortal","document","getElementById","TodoError","TodoLoading","TodoEmpty","AppUI","Fragment","map","href","rel","App","render"],"mappings":"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","file":"static/js/main.056071b1.chunk.js","sourcesContent":["import React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n//Aqui hay dos componentes, todoContext.provider (para envolver la app) y .consumer (cuando necesitemos la info)\nconst TodoContext = React.createContext();\n\n//Creamos un puente para compartir la info\nfunction TodoProvider(props) {\n  const {\n    item: todos, //Para renombrar\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage(\"todos_v1\", []);\n\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const [openModal, setOpenModal] = React.useState(false);\n\n  // Cada vez que cambien los todos se realizará la cuenta \"!!\" si es true\n  const completedTodos = todos.filter((todo) => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter((todo) => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  //TODO state\n\n  const addTodo = (text) => {\n    const newTodos = [...todos];\n\n    newTodos.push({\n      completed: false,\n      text: text,\n    });\n\n    saveTodos(newTodos);\n    // todos[todoIndex] = {text: todos[todoIndex].text, completed:true}\n  };\n  const completeTodo = (text) => {\n    //Recibe el identificador del todo\n    const todoIndex = todos.findIndex((todo) => todo.text === text); //Compara los todos con el texto que recibimos\n\n    //Creamos una nueva lista con los cambios hechos para que se actualice\n    const newTodos = [...todos]; //Primero se le ponen todos los que tenia antes\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n    // todos[todoIndex] = {text: todos[todoIndex].text, completed:true}\n  };\n\n  const unCompleteTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = false;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = (text) => {\n    //Recibe el identificador del todo\n    const todoIndex = todos.findIndex((todo) => todo.text === text); //Compara los todos con el texto que recibimos\n\n    //Creamos una nueva lista con los cambios hechos para que se actualice\n    const newTodos = [...todos]; //Primero se le ponen todos los que tenia antes\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n    // todos[todoIndex] = {text: todos[todoIndex].text, completed:true}\n  };\n\n  return (\n    //envuelve toda la app, tiene por dentro cualquier componente donde llamemos al consumer\n    <TodoContext.Provider\n      value={{\n        error,\n        loading,\n        totalTodos,\n        completedTodos,\n        searchValue,\n        setSearchValue,\n        searchedTodos,\n        completeTodo,\n        addTodo,\n        unCompleteTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal,\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport { TodoContext, TodoProvider };\n","import React from \"react\";\n\n//No solo devolverá los items de localStorage de nuestros todos, también devuelve el item que guardemos\nfunction useLocalStorage(itemName, initialValue) {\n  // Llamamos a local storage\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [item, setItem] = React.useState(initialValue);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        //En el caso de que el usuario sea nuevo, se crea el primer array vacio, con todos por defecto\n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n      //En el caso de que ek usuario NO SEA NUEVO\n    }, 1000);\n  });\n\n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  return { item, saveItem, loading, error };\n}\n\nexport { useLocalStorage };\n","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoCounter.css\";\n\nfunction TodoCounter() {\n  const { totalTodos, completedTodos } = React.useContext(TodoContext);\n\n  return (\n    <h2 className=\"TodoCounter\">\n      You have completed {completedTodos} out of {totalTodos} tasks\n    </h2>\n  );\n}\n\nexport { TodoCounter };\n// Para evitar usar nombres que no son al momento de exportar usamos ⬆\n","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoSearch.css\";\n\nfunction TodoSearch() {\n  const { searchValue, setSearchValue } = React.useContext(TodoContext);\n\n  const onSearchValueChange = (event) => {\n    console.log(event.target.value);\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <input\n      className=\"TodoSearch\"\n      placeholder=\"Search\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n  );\n}\n\nexport { TodoSearch };\n","import React from \"react\";\nimport \"./TodoList.css\";\n\nfunction TodoList(props) {\n  return <section>{props.children}</section>;\n}\n\nexport { TodoList };\n","import React from \"react\";\nimport \"./TodoItem.css\";\nimport { TiDelete } from \"react-icons/ti\";\nimport { FaCheckCircle } from \"react-icons/fa\";\n\nfunction TodoItem(props) {\n  return (\n    <li className={\"TodoItem\"}>\n      <span\n        className={`Icon Icon-check ${props.completed && \"Icon-check--active\"}`} //Si recibe una propiedad llamada completed y es true entonces se agrega --active\n        onClick={!props.completed ? props.onComplete : props.unComplete}\n      >\n        <FaCheckCircle />\n      </span>\n      <p className={`TodoItem-p ${props.completed && \"TodoItem-p--complete\"}`}>\n        {props.text}\n      </p>\n      <span className=\"Icon Icon-delete\" onClick={props.onDelete}>\n        <TiDelete />\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoForm.css\";\n\nfunction TodoForm() {\n  const { addTodo, setOpenModal } = React.useContext(TodoContext);\n\n  const [newTodoValue, setNewTodoValue] = React.useState(\"\");\n\n  const onChange = (event) => {\n    setNewTodoValue(event.target.value);\n  };\n\n  const onCancel = () => {\n    setOpenModal(false);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault(); //Nos permite enviar el formulario sin recargar la página\n    addTodo(newTodoValue);\n    setOpenModal(false);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label>Write your new task</label>\n      <textarea\n        value={newTodoValue}\n        onChange={onChange}\n        placeholder=\"Write here the task you want to complete\"\n      />\n      <div className=\"TodoForm-buttonContainer\">\n        <button\n          className=\"TodoForm-button TodoForm-button-cancel\"\n          type=\"button\"\n          onClick={onCancel}\n        >\n          Cancel\n        </button>\n        <button\n          className=\"TodoForm-button TodoForm-button-add\"\n          type=\"submit\"\n          disabled={!newTodoValue}\n        >\n          Add\n        </button>\n      </div>\n    </form>\n  );\n}\n//textArea para que el espacio no sea tan pequeño, y si se pasan que aumente\nexport { TodoForm };\n","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./CreateTodoButton.css\";\n\nfunction CreateTodoButton() {\n  const { openModal, setOpenModal } = React.useContext(TodoContext);\n\n  const onClickButton = () => {\n    setOpenModal(!openModal);\n  };\n\n  return (\n    <button\n      className={`CreateTodoButton ${openModal && \"Create\"}`}\n      onClick={onClickButton}\n    >\n      +\n    </button>\n  );\n}\n\nexport { CreateTodoButton };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Modal.css\";\n\nfunction Modal({ children }) {\n  return ReactDOM.createPortal(\n    //Aqui podemos enviar lo que queramos, en este caso va a enviar lo que querramos al modal\n    <div className=\"ModalBackground\">{children}</div>,\n    document.getElementById(\"modal\")\n  );\n}\n\nexport { Modal };\n","import React from \"react\";\n\nfunction TodoError({ error }) {\n  return <p>There was a mistake, please refresh the page</p>;\n}\n\nexport { TodoError };\n","import React from \"react\";\nimport \"./TodoLoading.css\";\n\nfunction TodoLoading() {\n  return (\n    <div className=\"LoadingTodo-container\">\n      <p className=\"LoadingTodo-text\">Loading, please wait...</p>\n    </div>\n  );\n}\n\nexport { TodoLoading };\n","import React from \"react\";\nimport \"./TodoEmpty.css\";\n\nfunction TodoEmpty() {\n  return <p className=\"TodoEmpty-p\">Create your first task!</p>;\n}\n\nexport { TodoEmpty };\n","import React from \"react\";\nimport { TodoCounter } from \"../TodoCounter\";\nimport { TodoSearch } from \"../TodoSearch\";\nimport { TodoList } from \"../TodoList\";\nimport { TodoItem } from \"../TodoItem\";\nimport { TodoForm } from \"../TodoForm\";\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport { TodoContext } from \"../TodoContext\";\nimport { Modal } from \"../Modal\";\nimport { TodoError } from \"../TodoError\";\nimport { TodoLoading } from \"../TodoLoading\";\nimport { TodoEmpty } from \"../TodoEmpty\";\n\n\nfunction AppUI() {\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    unCompleteTodo,\n    openModal,\n    setOpenModal,\n  } = React.useContext(TodoContext);\n  return (\n    <React.Fragment>\n      <h1>TODO list 📗</h1>\n      {!loading && !searchedTodos.length ? <TodoEmpty /> : <TodoCounter />}\n      <TodoSearch />\n\n      <TodoList>\n        {error && <TodoError error={error} />}\n        {loading && <TodoLoading />}\n\n        {/*Si no estamos cargando y la info es vacía que haga el primer todo*/}\n        {searchedTodos.map((todo) => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => {\n              completeTodo(todo.text);\n            }}\n            unComplete={() => {\n              unCompleteTodo(todo.text);\n            }}\n            onDelete={() => {\n              deleteTodo(todo.text);\n            }}\n          />\n        ))}\n      </TodoList>\n\n      {openModal && (\n        <Modal>\n          <TodoForm />\n        </Modal>\n      )}\n      <CreateTodoButton setOpenModal={setOpenModal} />\n      {/* //Abre el modal para hacer nuevos todos en un futuro */}\n\n      <footer>\n        <h2> Made by antuansabe </h2>\n        <div className=\"links\">\n          <a href=\"https://github.com/antuansabe\" target=\"_blank\" rel=\"noreferrer\">\n    \n          </a>\n        </div>\n      </footer>\n    </React.Fragment>\n  );\n}\n\nexport { AppUI };\n","import React from \"react\";\nimport { AppUI } from \"./AppUI\";\nimport { TodoProvider } from \"../TodoContext\";\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/index\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}