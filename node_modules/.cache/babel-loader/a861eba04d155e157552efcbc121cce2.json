{"ast":null,"code":"var _jsxFileName = \"/Users/antonn/Documents/develop/todo/src/TodoContext/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext } from 'react';\nimport { useLocalStorage } from './useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/createContext();\n\nfunction TodoProvider(props) {\n  _s();\n\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error\n  } = useLocalStorage('TODOS_V1', []);\n  const [search, setSearch] = useState('');\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length; //Con esto filtraremos nuestros todos\n\n  let searchedTodos = [];\n\n  if (!search.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = search.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  } //Esta funcion buscara que texto coincide con el texto buscado \n\n\n  const completeTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  }; //Esta funcion replica la anterior pero borrando todos\n\n\n  const deleteTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodoContext.provider, {\n    value: {\n      loading,\n      error,\n      totalTodos,\n      completedTodos,\n      search,\n      setSearch,\n      searchedTodos,\n      completeTodo,\n      deleteTodo\n    },\n    children: props.childen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoProvider, \"3ZoAIdw5CHClsahIcvL6prI9s0E=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = TodoProvider;\nexport { TodoContext, TodoProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"sources":["/Users/antonn/Documents/develop/todo/src/TodoContext/index.js"],"names":["React","createContext","useLocalStorage","TodoContext","TodoProvider","props","item","todos","saveItem","saveTodos","loading","error","search","setSearch","useState","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","childen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,eAAT,QAAgC,mBAAhC;;AAEA,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;;AAEA,SAASG,YAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAE1B,QAAM;AACFC,IAAAA,IAAI,EAAEC,KADJ;AAEFC,IAAAA,QAAQ,EAAEC,SAFR;AAGFC,IAAAA,OAHE;AAIFC,IAAAA;AAJE,MAKFT,eAAe,CAAC,UAAD,EAAa,EAAb,CALnB;AAQA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMC,cAAc,GAAGR,KAAK,CAACS,MAAN,CAAcC,IAAI,IAAI,CAAC,CAACA,IAAI,CAACC,SAA7B,EAAwCC,MAA/D;AACA,QAAMC,UAAU,GAAGb,KAAK,CAACY,MAAzB,CAZ0B,CAe1B;;AACI,MAAIE,aAAa,GAAG,EAApB;;AAEJ,MAAI,CAACT,MAAM,CAACO,MAAR,IAAkB,CAAtB,EAAyB;AACrBE,IAAAA,aAAa,GAAGd,KAAhB;AACH,GAFD,MAEO;AACHc,IAAAA,aAAa,GAAGd,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAI;AACrC,YAAMK,QAAQ,GAAGL,IAAI,CAACM,IAAL,CAAUC,WAAV,EAAjB;AACA,YAAMC,UAAU,GAAGb,MAAM,CAACY,WAAP,EAAnB;AACA,aAAOF,QAAQ,CAACI,QAAT,CAAkBD,UAAlB,CAAP;AAEC,KALe,CAAhB;AAMH,GA3ByB,CA6BxB;;;AACE,QAAME,YAAY,GAAIJ,IAAD,IAAU;AAC/B,UAAMK,SAAS,GAAGrB,KAAK,CAACsB,SAAN,CAAgBZ,IAAI,IAAIA,IAAI,CAACM,IAAL,KAAcA,IAAtC,CAAlB;AACA,UAAMO,QAAQ,GAAG,CAAC,GAAGvB,KAAJ,CAAjB;AACAuB,IAAAA,QAAQ,CAACF,SAAD,CAAR,CAAoBV,SAApB,GAAgC,IAAhC;AACAT,IAAAA,SAAS,CAACqB,QAAD,CAAT;AACH,GALG,CA9BsB,CAqCxB;;;AACE,QAAMC,UAAU,GAAIR,IAAD,IAAU;AAC7B,UAAMK,SAAS,GAAGrB,KAAK,CAACsB,SAAN,CAAgBZ,IAAI,IAAIA,IAAI,CAACM,IAAL,KAAcA,IAAtC,CAAlB;AACA,UAAMO,QAAQ,GAAG,CAAC,GAAGvB,KAAJ,CAAjB;AACAuB,IAAAA,QAAQ,CAACE,MAAT,CAAgBJ,SAAhB,EAA2B,CAA3B;AACAnB,IAAAA,SAAS,CAACqB,QAAD,CAAT;AACH,GALG;;AAOJ,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAG;AAC1BpB,MAAAA,OAD0B;AAE1BC,MAAAA,KAF0B;AAG1BS,MAAAA,UAH0B;AAI1BL,MAAAA,cAJ0B;AAK1BH,MAAAA,MAL0B;AAM1BC,MAAAA,SAN0B;AAO1BQ,MAAAA,aAP0B;AAQ1BM,MAAAA,YAR0B;AAS1BI,MAAAA;AAT0B,KAA9B;AAAA,cAWC1B,KAAK,CAAC4B;AAXP;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA7DQ7B,Y;UAODF,e;;;KAPCE,Y;AA+DL,SAASD,WAAT,EAAsBC,YAAtB","sourcesContent":["import React, { createContext } from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\nconst TodoContext = createContext();\n\nfunction TodoProvider (props) {\n\n    const {\n        item: todos,\n        saveItem: saveTodos,\n        loading,\n        error,\n    } = useLocalStorage('TODOS_V1', []);\n    \n    \n    const [search, setSearch] = useState('');\n    const completedTodos = todos.filter( todo => !!todo.completed).length;\n    const totalTodos = todos.length;\n    \n    \n    //Con esto filtraremos nuestros todos\n        let searchedTodos = [];\n    \n    if (!search.length >= 1) {\n        searchedTodos = todos;\n    } else {\n        searchedTodos = todos.filter(todo => {\n        const todoText = todo.text.toLowerCase();\n        const searchText = search.toLowerCase();\n        return todoText.includes(searchText);\n    \n        })\n    }\n    \n      //Esta funcion buscara que texto coincide con el texto buscado \n        const completeTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos[todoIndex].completed = true;\n        saveTodos(newTodos);\n    };\n    \n      //Esta funcion replica la anterior pero borrando todos\n        const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n        saveTodos(newTodos);\n    };\n    \n    return (\n        <TodoContext.provider value={ { \n            loading,\n            error,\n            totalTodos,\n            completedTodos,\n            search,\n            setSearch,\n            searchedTodos,\n            completeTodo,\n            deleteTodo,\n        }} >\n        {props.childen}\n\n        </TodoContext.provider>\n    );\n}\n\n    export { TodoContext, TodoProvider };"]},"metadata":{},"sourceType":"module"}