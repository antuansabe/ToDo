{"ast":null,"code":"import _toConsumableArray from\"/Users/antonn/Documents/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/antonn/Documents/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{useLocalStorage}from\"./useLocalStorage\";//Aqui hay dos componentes, todoContext.provider (para envolver la app) y .consumer (cuando necesitemos la info)\nimport{jsx as _jsx}from\"react/jsx-runtime\";var TodoContext=/*#__PURE__*/React.createContext();//Creamos un puente para compartir la info\nfunction TodoProvider(props){var _useLocalStorage=useLocalStorage(\"todos_v1\",[]),todos=_useLocalStorage.item,saveTodos=_useLocalStorage.saveItem,loading=_useLocalStorage.loading,error=_useLocalStorage.error;var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),searchValue=_React$useState2[0],setSearchValue=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),openModal=_React$useState4[0],setOpenModal=_React$useState4[1];// Cada vez que cambien los todos se realizará la cuenta \"!!\" si es true\nvar completedTodos=todos.filter(function(todo){return!!todo.completed;}).length;var totalTodos=todos.length;var searchedTodos=[];if(!searchValue.length>=1){searchedTodos=todos;}else{searchedTodos=todos.filter(function(todo){var todoText=todo.text.toLowerCase();var searchText=searchValue.toLowerCase();return todoText.includes(searchText);});}//TODO state\nvar addTodo=function addTodo(text){var newTodos=_toConsumableArray(todos);newTodos.push({completed:false,text:text});saveTodos(newTodos);// todos[todoIndex] = {text: todos[todoIndex].text, completed:true}\n};var completeTodo=function completeTodo(text){//Recibe el identificador del todo\nvar todoIndex=todos.findIndex(function(todo){return todo.text===text;});//Compara los todos con el texto que recibimos\n//Creamos una nueva lista con los cambios hechos para que se actualice\nvar newTodos=_toConsumableArray(todos);//Primero se le ponen todos los que tenia antes\nnewTodos[todoIndex].completed=true;saveTodos(newTodos);// todos[todoIndex] = {text: todos[todoIndex].text, completed:true}\n};var unCompleteTodo=function unCompleteTodo(text){var todoIndex=todos.findIndex(function(todo){return todo.text===text;});var newTodos=_toConsumableArray(todos);newTodos[todoIndex].completed=false;saveTodos(newTodos);};var deleteTodo=function deleteTodo(text){//Recibe el identificador del todo\nvar todoIndex=todos.findIndex(function(todo){return todo.text===text;});//Compara los todos con el texto que recibimos\n//Creamos una nueva lista con los cambios hechos para que se actualice\nvar newTodos=_toConsumableArray(todos);//Primero se le ponen todos los que tenia antes\nnewTodos.splice(todoIndex,1);saveTodos(newTodos);// todos[todoIndex] = {text: todos[todoIndex].text, completed:true}\n};return/*#__PURE__*/ (//envuelve toda la app, tiene por dentro cualquier componente donde llamemos al consumer\n_jsx(TodoContext.Provider,{value:{error:error,loading:loading,totalTodos:totalTodos,completedTodos:completedTodos,searchValue:searchValue,setSearchValue:setSearchValue,searchedTodos:searchedTodos,completeTodo:completeTodo,addTodo:addTodo,unCompleteTodo:unCompleteTodo,deleteTodo:deleteTodo,openModal:openModal,setOpenModal:setOpenModal},children:props.children}));}export{TodoContext,TodoProvider};","map":{"version":3,"sources":["/Users/antonn/Documents/develop/todo/src/TodoContext/index.js"],"names":["React","useLocalStorage","TodoContext","createContext","TodoProvider","props","todos","item","saveTodos","saveItem","loading","error","useState","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","unCompleteTodo","deleteTodo","splice","children"],"mappings":"oSAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,eAAT,KAAgC,mBAAhC,CACA;2CACA,GAAMC,CAAAA,WAAW,cAAGF,KAAK,CAACG,aAAN,EAApB,CAEA;AACA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,sBAMvBJ,eAAe,CAAC,UAAD,CAAa,EAAb,CANQ,CAEnBK,KAFmB,kBAEzBC,IAFyB,CAGfC,SAHe,kBAGzBC,QAHyB,CAIzBC,OAJyB,kBAIzBA,OAJyB,CAKzBC,KALyB,kBAKzBA,KALyB,qBAQWX,KAAK,CAACY,QAAN,CAAe,EAAf,CARX,oDAQpBC,WARoB,qBAQPC,cARO,0CASOd,KAAK,CAACY,QAAN,CAAe,KAAf,CATP,qDASpBG,SAToB,qBASTC,YATS,qBAW3B;AACA,GAAMC,CAAAA,cAAc,CAAGX,KAAK,CAACY,MAAN,CAAa,SAACC,IAAD,QAAU,CAAC,CAACA,IAAI,CAACC,SAAjB,EAAb,EAAyCC,MAAhE,CACA,GAAMC,CAAAA,UAAU,CAAGhB,KAAK,CAACe,MAAzB,CAEA,GAAIE,CAAAA,aAAa,CAAG,EAApB,CAEA,GAAI,CAACV,WAAW,CAACQ,MAAb,EAAuB,CAA3B,CAA8B,CAC5BE,aAAa,CAAGjB,KAAhB,CACD,CAFD,IAEO,CACLiB,aAAa,CAAGjB,KAAK,CAACY,MAAN,CAAa,SAACC,IAAD,CAAU,CACrC,GAAMK,CAAAA,QAAQ,CAAGL,IAAI,CAACM,IAAL,CAAUC,WAAV,EAAjB,CACA,GAAMC,CAAAA,UAAU,CAAGd,WAAW,CAACa,WAAZ,EAAnB,CACA,MAAOF,CAAAA,QAAQ,CAACI,QAAT,CAAkBD,UAAlB,CAAP,CACD,CAJe,CAAhB,CAKD,CAED;AAEA,GAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACJ,IAAD,CAAU,CACxB,GAAMK,CAAAA,QAAQ,oBAAOxB,KAAP,CAAd,CAEAwB,QAAQ,CAACC,IAAT,CAAc,CACZX,SAAS,CAAE,KADC,CAEZK,IAAI,CAAEA,IAFM,CAAd,EAKAjB,SAAS,CAACsB,QAAD,CAAT,CACA;AACD,CAVD,CAWA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACP,IAAD,CAAU,CAC7B;AACA,GAAMQ,CAAAA,SAAS,CAAG3B,KAAK,CAAC4B,SAAN,CAAgB,SAACf,IAAD,QAAUA,CAAAA,IAAI,CAACM,IAAL,GAAcA,IAAxB,EAAhB,CAAlB,CAAiE;AAEjE;AACA,GAAMK,CAAAA,QAAQ,oBAAOxB,KAAP,CAAd,CAA6B;AAC7BwB,QAAQ,CAACG,SAAD,CAAR,CAAoBb,SAApB,CAAgC,IAAhC,CACAZ,SAAS,CAACsB,QAAD,CAAT,CACA;AACD,CATD,CAWA,GAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACV,IAAD,CAAU,CAC/B,GAAMQ,CAAAA,SAAS,CAAG3B,KAAK,CAAC4B,SAAN,CAAgB,SAACf,IAAD,QAAUA,CAAAA,IAAI,CAACM,IAAL,GAAcA,IAAxB,EAAhB,CAAlB,CAEA,GAAMK,CAAAA,QAAQ,oBAAOxB,KAAP,CAAd,CACAwB,QAAQ,CAACG,SAAD,CAAR,CAAoBb,SAApB,CAAgC,KAAhC,CACAZ,SAAS,CAACsB,QAAD,CAAT,CACD,CAND,CAQA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACX,IAAD,CAAU,CAC3B;AACA,GAAMQ,CAAAA,SAAS,CAAG3B,KAAK,CAAC4B,SAAN,CAAgB,SAACf,IAAD,QAAUA,CAAAA,IAAI,CAACM,IAAL,GAAcA,IAAxB,EAAhB,CAAlB,CAAiE;AAEjE;AACA,GAAMK,CAAAA,QAAQ,oBAAOxB,KAAP,CAAd,CAA6B;AAC7BwB,QAAQ,CAACO,MAAT,CAAgBJ,SAAhB,CAA2B,CAA3B,EACAzB,SAAS,CAACsB,QAAD,CAAT,CACA;AACD,CATD,CAWA,oBACE;AACA,KAAC,WAAD,CAAa,QAAb,EACE,KAAK,CAAE,CACLnB,KAAK,CAALA,KADK,CAELD,OAAO,CAAPA,OAFK,CAGLY,UAAU,CAAVA,UAHK,CAILL,cAAc,CAAdA,cAJK,CAKLJ,WAAW,CAAXA,WALK,CAMLC,cAAc,CAAdA,cANK,CAOLS,aAAa,CAAbA,aAPK,CAQLS,YAAY,CAAZA,YARK,CASLH,OAAO,CAAPA,OATK,CAULM,cAAc,CAAdA,cAVK,CAWLC,UAAU,CAAVA,UAXK,CAYLrB,SAAS,CAATA,SAZK,CAaLC,YAAY,CAAZA,YAbK,CADT,UAiBGX,KAAK,CAACiC,QAjBT,EAFF,EAsBD,CAED,OAASpC,WAAT,CAAsBE,YAAtB","sourcesContent":["import React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n//Aqui hay dos componentes, todoContext.provider (para envolver la app) y .consumer (cuando necesitemos la info)\nconst TodoContext = React.createContext();\n\n//Creamos un puente para compartir la info\nfunction TodoProvider(props) {\n  const {\n    item: todos, //Para renombrar\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage(\"todos_v1\", []);\n\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const [openModal, setOpenModal] = React.useState(false);\n\n  // Cada vez que cambien los todos se realizará la cuenta \"!!\" si es true\n  const completedTodos = todos.filter((todo) => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter((todo) => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  //TODO state\n\n  const addTodo = (text) => {\n    const newTodos = [...todos];\n\n    newTodos.push({\n      completed: false,\n      text: text,\n    });\n\n    saveTodos(newTodos);\n    // todos[todoIndex] = {text: todos[todoIndex].text, completed:true}\n  };\n  const completeTodo = (text) => {\n    //Recibe el identificador del todo\n    const todoIndex = todos.findIndex((todo) => todo.text === text); //Compara los todos con el texto que recibimos\n\n    //Creamos una nueva lista con los cambios hechos para que se actualice\n    const newTodos = [...todos]; //Primero se le ponen todos los que tenia antes\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n    // todos[todoIndex] = {text: todos[todoIndex].text, completed:true}\n  };\n\n  const unCompleteTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = false;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = (text) => {\n    //Recibe el identificador del todo\n    const todoIndex = todos.findIndex((todo) => todo.text === text); //Compara los todos con el texto que recibimos\n\n    //Creamos una nueva lista con los cambios hechos para que se actualice\n    const newTodos = [...todos]; //Primero se le ponen todos los que tenia antes\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n    // todos[todoIndex] = {text: todos[todoIndex].text, completed:true}\n  };\n\n  return (\n    //envuelve toda la app, tiene por dentro cualquier componente donde llamemos al consumer\n    <TodoContext.Provider\n      value={{\n        error,\n        loading,\n        totalTodos,\n        completedTodos,\n        searchValue,\n        setSearchValue,\n        searchedTodos,\n        completeTodo,\n        addTodo,\n        unCompleteTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal,\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport { TodoContext, TodoProvider };\n"]},"metadata":{},"sourceType":"module"}