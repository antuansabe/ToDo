{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\"; //No solo devolverá los items de localStorage de nuestros todos, también devuelve el item que guardemos\n\nfunction useLocalStorage(itemName, initialValue) {\n  _s();\n\n  // Llamamos a local storage\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [item, setItem] = React.useState(initialValue);\n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem; //En el caso de que el usuario sea nuevo, se crea el primer array vacio, con todos por defecto\n\n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      } //En el caso de que ek usuario NO SEA NUEVO\n\n    }, 1000);\n  });\n\n  const saveItem = newItem => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error\n  };\n}\n\n_s(useLocalStorage, \"sd/jOzXoKWa10AnxNJGXHNbuvYQ=\");\n\nexport { useLocalStorage };","map":{"version":3,"sources":["/Users/antonn/Documents/develop/todo/src/TodoContext/useLocalStorage.js"],"names":["React","useLocalStorage","itemName","initialValue","error","setError","useState","loading","setLoading","item","setItem","useEffect","setTimeout","localStorageItem","localStorage","getItem","parsedItem","JSON","stringify","parse","saveItem","newItem","stringifiedItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,YAAnC,EAAiD;AAAA;;AAC/C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAe,KAAf,CAA1B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACM,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACM,QAAN,CAAeH,YAAf,CAAxB;AAEAH,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpBC,IAAAA,UAAU,CAAC,MAAM;AACf,UAAI;AACF,cAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAb,CAAqBb,QAArB,CAAzB;AACA,YAAIc,UAAJ,CAFE,CAIF;;AACA,YAAI,CAACH,gBAAL,EAAuB;AACrBC,UAAAA,YAAY,CAACJ,OAAb,CAAqBR,QAArB,EAA+Be,IAAI,CAACC,SAAL,CAAef,YAAf,CAA/B;AACAa,UAAAA,UAAU,GAAGb,YAAb;AACD,SAHD,MAGO;AACLa,UAAAA,UAAU,GAAGC,IAAI,CAACE,KAAL,CAAWN,gBAAX,CAAb;AACD;;AAEDH,QAAAA,OAAO,CAACM,UAAD,CAAP;AACAR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAdD,CAcE,OAAOJ,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OAjBc,CAkBf;;AACD,KAnBS,EAmBP,IAnBO,CAAV;AAoBD,GArBD;;AAuBA,QAAMgB,QAAQ,GAAIC,OAAD,IAAa;AAC5B,QAAI;AACF,YAAMC,eAAe,GAAGL,IAAI,CAACC,SAAL,CAAeG,OAAf,CAAxB;AACAP,MAAAA,YAAY,CAACJ,OAAb,CAAqBR,QAArB,EAA+BoB,eAA/B;AACAZ,MAAAA,OAAO,CAACW,OAAD,CAAP;AACD,KAJD,CAIE,OAAOjB,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,GARD;;AAUA,SAAO;AAAEK,IAAAA,IAAF;AAAQW,IAAAA,QAAR;AAAkBb,IAAAA,OAAlB;AAA2BH,IAAAA;AAA3B,GAAP;AACD;;GAxCQH,e;;AA0CT,SAASA,eAAT","sourcesContent":["import React from \"react\";\n\n//No solo devolverá los items de localStorage de nuestros todos, también devuelve el item que guardemos\nfunction useLocalStorage(itemName, initialValue) {\n  // Llamamos a local storage\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [item, setItem] = React.useState(initialValue);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        //En el caso de que el usuario sea nuevo, se crea el primer array vacio, con todos por defecto\n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n      //En el caso de que ek usuario NO SEA NUEVO\n    }, 1000);\n  });\n\n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  return { item, saveItem, loading, error };\n}\n\nexport { useLocalStorage };\n"]},"metadata":{},"sourceType":"module"}